-- Load Fluent and addons
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Configuration
local aimbotEnabled = false
local espEnabled = true        -- เปิด ESP ตั้งแต่เริ่มต้น
local targetPlayer = nil
local lockMode = "Head"            -- "Head" or "Body"
local fovRadius = 100
local minFov = 10
local maxFov = 300
local smoothness = 0.1              -- Less smoothing for faster lock
local readyToShoot = false
local warpKey = Enum.KeyCode.T      -- default warp key
local isSmoothEnabled = true        -- toggle for smooth aimbot
local isRightDown = false           -- track right mouse hold

-- Draw FOV circle
local fovCircle = Drawing.new("Circle")
fovCircle.Color = Color3.fromRGB(0, 255, 0)
fovCircle.Thickness = 1
fovCircle.Transparency = 0.5
fovCircle.Filled = false
fovCircle.Radius = fovRadius
fovCircle.Visible = true

-- Create Fluent window
local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Helper functions
local function ToggleLockMode()
    lockMode = (lockMode == "Head") and "Body" or "Head"
    print("Lock mode switched to:", lockMode)
end

local function GetTargetPart(character)
    if lockMode == "Head" then
        return character:FindFirstChild("Head")
    else
        return character:FindFirstChild("HumanoidRootPart")
    end
end

local function GetClosestTarget()
    local closest, shortest = nil, fovRadius
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local part = GetTargetPart(player.Character) or player.Character:FindFirstChild("HumanoidRootPart")
            local humanoid = player.Character:FindFirstChild("Humanoid")
            local ff = player.Character:FindFirstChildOfClass("ForceField")
            if part and humanoid and humanoid.Health > 0 and not ff then
                local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
                if onScreen then
                    local mpos = UserInputService:GetMouseLocation()
                    local dist = (Vector2.new(screenPos.X, screenPos.Y) - mpos).Magnitude
                    if dist < shortest then
                        shortest = dist
                        closest = player
                    end
                end
            end
        end
    end
    return closest
end

local function Mouse1Click()
    local mloc = UserInputService:GetMouseLocation()
    VirtualInputManager:SendMouseButtonEvent(mloc.X, mloc.Y, 0, true, game, 0)
    task.wait()
    VirtualInputManager:SendMouseButtonEvent(mloc.X, mloc.Y, 0, false, game, 0)
end

-- ESP functions
local function createESP(player)
    if player.Team == LocalPlayer.Team then return end
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    local humanoid = char:WaitForChild("Humanoid")
    if char:FindFirstChild("ESP") then return end

    local gui = Instance.new("BillboardGui")
    gui.Name = "ESP"
    gui.Adornee = hrp
    gui.Size = UDim2.new(4, 0, 5, 0)
    gui.AlwaysOnTop = true
    gui.StudsOffset = Vector3.new(0, 3, 0)
    gui.Parent = char

    local nameLbl = Instance.new("TextLabel", gui)
    nameLbl.Size = UDim2.new(1, 0, 0.3, 0)
    nameLbl.BackgroundTransparency = 1
    nameLbl.Text = player.Name
    nameLbl.TextColor3 = Color3.new(1, 1, 1)
    nameLbl.TextStrokeTransparency = 0
    nameLbl.Font = Enum.Font.SourceSansBold
    nameLbl.TextScaled = true

    local healthBG = Instance.new("Frame", gui)
    healthBG.Size = UDim2.new(1, 0, 0.1, 0)
    healthBG.Position = UDim2.new(0, 0, 0.35, 0)
    healthBG.BackgroundColor3 = Color3.new(0, 0, 0)
    healthBG.BorderSizePixel = 0

    local healthBar = Instance.new("Frame", healthBG)
    healthBar.Size = UDim2.new(1, 0, 1, 0)
    healthBar.BorderSizePixel = 0

    RunService.RenderStepped:Connect(function()
        if humanoid.Health > 0 then
            local pct = humanoid.Health / humanoid.MaxHealth
            healthBar.Size = UDim2.new(pct, 0, 1, 0)
            healthBar.BackgroundColor3 = (pct < 0.3) and Color3.new(1, 0, 0) or Color3.new(0, 1, 0)
        end
    end)

    player.CharacterAdded:Connect(function(character)
        if not character:FindFirstChild("ESP") then
            createESP(player)
        end
    end)
end

local function removeESP(player)
    if player.Character then
        local gui = player.Character:FindFirstChild("ESP")
        if gui then gui:Destroy() end
    end
end

local function ToggleESP()
    espEnabled = not espEnabled
    if espEnabled then
        for _, p in ipairs(Players:GetPlayers()) do
            if p ~= LocalPlayer then createESP(p) end
        end
    else
        for _, p in ipairs(Players:GetPlayers()) do
            removeESP(p)
        end
    end
end

-- Build Main tab UI
local tESP = Tabs.Main:AddToggle("ESPToggle", { Title = "Enable ESP", Default = espEnabled })
tESP:OnChanged(function() ToggleESP() end)

ToggleESP() -- เปิด ESP ทันทีหลังโหลดสคริปต์

local tAim = Tabs.Main:AddToggle("AimbotToggle", { Title = "Enable Aimbot", Default = aimbotEnabled })
tAim:OnChanged(function(val) aimbotEnabled = val end)

local tFOV = Tabs.Main:AddToggle("FovToggle", { Title = "Enable FOV", Default = true })
tFOV:OnChanged(function(val) fovCircle.Visible = val end)

local sFOV = Tabs.Main:AddSlider("FovSlider", { Title = "FOV Size", Description = "Adjust the FOV radius", Default = fovRadius, Min = minFov, Max = maxFov, Rounding = 1, Callback = function(v) fovRadius = v fovCircle.Radius = v end })
sFOV:SetValue(fovRadius)

local iWarp = Tabs.Main:AddInput("TeleportKeyInput", { Title = "Warp Key", Default = warpKey.Name, Placeholder = "Enter key (e.g. G)", Numeric = false, Finished = true, Callback = function(val) local code = val:upper() if Enum.KeyCode[code] then warpKey = Enum.KeyCode[code] print("Warp key set to:", warpKey.Name) else warn("Invalid key:", val) end end })

local tSmooth = Tabs.Main:AddToggle("SmoothToggle", { Title = "Enable Smooth Aimbot", Default = isSmoothEnabled })
tSmooth:OnChanged(function(val) isSmoothEnabled = val print("Smooth Aimbot set to:", val and "Enabled" or "Disabled") end)

-- Build Settings UI
local tLockMode = Tabs.Settings:AddToggle("LockModeToggle", { Title = "Lock Aim to Head", Default = (lockMode == "Head") })
tLockMode:OnChanged(function(val) lockMode = val and "Head" or "Body" print("Lock Mode switched to:", lockMode) end)

-- Input tracking for right-click
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isRightDown = true
    end
end)
UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isRightDown = false
    end
end)

-- Save & Interface sections
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

-- Warp Teleport functionality
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == warpKey and targetPlayer and targetPlayer.Character then
        local part = GetTargetPart(targetPlayer.Character)
        if part then
            local offset = part.CFrame.LookVector * -5
            local targetPos = part.Position + offset
            local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.CFrame = CFrame.new(targetPos)
                print("Warped behind ", targetPlayer.Name)
            end
        end
    end
end)

-- Main loop: Aimbot & FOV handling (Updated for right-click)
RunService.RenderStepped:Connect(function()
    local mpos = UserInputService:GetMouseLocation()
    fovCircle.Position = mpos

    if aimbotEnabled and isRightDown then
        targetPlayer = GetClosestTarget()
        if targetPlayer and targetPlayer.Character then
            local part = GetTargetPart(targetPlayer.Character)
            if part then
                local aimPos = part.Position + (lockMode == "Head" and Vector3.new(0, 0.5, 0) or Vector3.new())
                if isSmoothEnabled then
                    Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(Camera.CFrame.Position, aimPos), smoothness)
                else
                    Camera.CFrame = CFrame.new(Camera.CFrame.Position, aimPos)
                end
                fovCircle.Color = Color3.fromRGB(255, 0, 0)
                readyToShoot = true
            end
        else
            fovCircle.Color = Color3.fromRGB(0, 255, 0)
            readyToShoot = false
        end
    else
        fovCircle.Color = Color3.fromRGB(0, 255, 0)
        readyToShoot = false
    end
end)
